{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\dev-projects\\\\APEX\\\\Legalalliance\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { MongoClient } from 'mongodb';\nimport * as i0 from \"@angular/core\";\nexport class ReportsService {\n  constructor() {\n    this.url = 'mongodb://localhost:27017/Apexdb';\n    const options = {};\n    this.client = new MongoClient(this.url, options);\n  }\n\n  getReports() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this.client.connect();\n\n        const collection = _this.client.db('Apexdb').collection('NewCases');\n\n        const reports = yield collection.find({}).toArray();\n        return reports;\n      } catch (err) {\n        console.error(err);\n        return [];\n      } finally {\n        yield _this.client.close();\n      }\n    })();\n  }\n\n}\n\nReportsService.ɵfac = function ReportsService_Factory(t) {\n  return new (t || ReportsService)();\n};\n\nReportsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ReportsService,\n  factory: ReportsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["D:/dev-projects/APEX/Legalalliance/src/app/reports.service.ts"],"names":["MongoClient","i0","ReportsService","constructor","url","options","client","getReports","connect","collection","db","reports","find","toArray","err","console","error","close","ɵfac","ReportsService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,GAAG;AACV,SAAKC,GAAL,GAAW,kCAAX;AACA,UAAMC,OAAO,GAAG,EAAhB;AACA,SAAKC,MAAL,GAAc,IAAIN,WAAJ,CAAgB,KAAKI,GAArB,EAA0BC,OAA1B,CAAd;AACH;;AACKE,EAAAA,UAAU,GAAG;AAAA;;AAAA;AACf,UAAI;AACA,cAAM,KAAI,CAACD,MAAL,CAAYE,OAAZ,EAAN;;AACA,cAAMC,UAAU,GAAG,KAAI,CAACH,MAAL,CAAYI,EAAZ,CAAe,QAAf,EAAyBD,UAAzB,CAAoC,UAApC,CAAnB;;AACA,cAAME,OAAO,SAASF,UAAU,CAACG,IAAX,CAAgB,EAAhB,EAAoBC,OAApB,EAAtB;AACA,eAAOF,OAAP;AACH,OALD,CAMA,OAAOG,GAAP,EAAY;AACRC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,eAAO,EAAP;AACH,OATD,SAUQ;AACJ,cAAM,KAAI,CAACR,MAAL,CAAYW,KAAZ,EAAN;AACH;AAbc;AAclB;;AApBuB;;AAsB5Bf,cAAc,CAACgB,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAIlB,cAAV,GAAP;AAAqC,CAAhG;;AACAA,cAAc,CAACmB,KAAf,GAAuB,aAAcpB,EAAE,CAACqB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAErB,cAAT;AAAyBsB,EAAAA,OAAO,EAAEtB,cAAc,CAACgB,IAAjD;AAAuDO,EAAAA,UAAU,EAAE;AAAnE,CAAtB,CAArC","sourcesContent":["import { MongoClient } from 'mongodb';\r\nimport * as i0 from \"@angular/core\";\r\nexport class ReportsService {\r\n    constructor() {\r\n        this.url = 'mongodb://localhost:27017/Apexdb';\r\n        const options = {};\r\n        this.client = new MongoClient(this.url, options);\r\n    }\r\n    async getReports() {\r\n        try {\r\n            await this.client.connect();\r\n            const collection = this.client.db('Apexdb').collection('NewCases');\r\n            const reports = await collection.find({}).toArray();\r\n            return reports;\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n            return [];\r\n        }\r\n        finally {\r\n            await this.client.close();\r\n        }\r\n    }\r\n}\r\nReportsService.ɵfac = function ReportsService_Factory(t) { return new (t || ReportsService)(); };\r\nReportsService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ReportsService, factory: ReportsService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}