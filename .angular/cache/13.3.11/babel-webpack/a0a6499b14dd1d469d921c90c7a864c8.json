{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"D:\\\\dev-projects\\\\APEX\\\\Legalalliance\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.X509 = void 0;\n\nconst error_1 = require(\"../../error\");\n\nconst utils_1 = require(\"../../utils\");\n\nconst auth_provider_1 = require(\"./auth_provider\");\n\nclass X509 extends auth_provider_1.AuthProvider {\n  prepare(handshakeDoc, authContext) {\n    return _asyncToGenerator(function* () {\n      const {\n        credentials\n      } = authContext;\n\n      if (!credentials) {\n        throw new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.');\n      }\n\n      return { ...handshakeDoc,\n        speculativeAuthenticate: x509AuthenticateCommand(credentials)\n      };\n    })();\n  }\n\n  auth(authContext) {\n    return _asyncToGenerator(function* () {\n      const connection = authContext.connection;\n      const credentials = authContext.credentials;\n\n      if (!credentials) {\n        throw new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.');\n      }\n\n      const response = authContext.response;\n\n      if (response?.speculativeAuthenticate) {\n        return;\n      }\n\n      yield connection.commandAsync((0, utils_1.ns)('$external.$cmd'), x509AuthenticateCommand(credentials), undefined);\n    })();\n  }\n\n}\n\nexports.X509 = X509;\n\nfunction x509AuthenticateCommand(credentials) {\n  const command = {\n    authenticate: 1,\n    mechanism: 'MONGODB-X509'\n  };\n\n  if (credentials.username) {\n    command.user = credentials.username;\n  }\n\n  return command;\n}","map":{"version":3,"sources":["D:/dev-projects/APEX/Legalalliance/node_modules/mongodb/lib/cmap/auth/x509.js"],"names":["Object","defineProperty","exports","value","X509","error_1","require","utils_1","auth_provider_1","AuthProvider","prepare","handshakeDoc","authContext","credentials","MongoMissingCredentialsError","speculativeAuthenticate","x509AuthenticateCommand","auth","connection","response","commandAsync","ns","undefined","command","authenticate","mechanism","username","user"],"mappings":"AAAA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,IAAR,GAAe,KAAK,CAApB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,aAAD,CAAvB;;AACA,MAAME,eAAe,GAAGF,OAAO,CAAC,iBAAD,CAA/B;;AACA,MAAMF,IAAN,SAAmBI,eAAe,CAACC,YAAnC,CAAgD;AACtCC,EAAAA,OAAO,CAACC,YAAD,EAAeC,WAAf,EAA4B;AAAA;AACrC,YAAM;AAAEC,QAAAA;AAAF,UAAkBD,WAAxB;;AACA,UAAI,CAACC,WAAL,EAAkB;AACd,cAAM,IAAIR,OAAO,CAACS,4BAAZ,CAAyC,uCAAzC,CAAN;AACH;;AACD,aAAO,EAAE,GAAGH,YAAL;AAAmBI,QAAAA,uBAAuB,EAAEC,uBAAuB,CAACH,WAAD;AAAnE,OAAP;AALqC;AAMxC;;AACKI,EAAAA,IAAI,CAACL,WAAD,EAAc;AAAA;AACpB,YAAMM,UAAU,GAAGN,WAAW,CAACM,UAA/B;AACA,YAAML,WAAW,GAAGD,WAAW,CAACC,WAAhC;;AACA,UAAI,CAACA,WAAL,EAAkB;AACd,cAAM,IAAIR,OAAO,CAACS,4BAAZ,CAAyC,uCAAzC,CAAN;AACH;;AACD,YAAMK,QAAQ,GAAGP,WAAW,CAACO,QAA7B;;AACA,UAAIA,QAAQ,EAAEJ,uBAAd,EAAuC;AACnC;AACH;;AACD,YAAMG,UAAU,CAACE,YAAX,CAAwB,CAAC,GAAGb,OAAO,CAACc,EAAZ,EAAgB,gBAAhB,CAAxB,EAA2DL,uBAAuB,CAACH,WAAD,CAAlF,EAAiGS,SAAjG,CAAN;AAVoB;AAWvB;;AAnB2C;;AAqBhDpB,OAAO,CAACE,IAAR,GAAeA,IAAf;;AACA,SAASY,uBAAT,CAAiCH,WAAjC,EAA8C;AAC1C,QAAMU,OAAO,GAAG;AAAEC,IAAAA,YAAY,EAAE,CAAhB;AAAmBC,IAAAA,SAAS,EAAE;AAA9B,GAAhB;;AACA,MAAIZ,WAAW,CAACa,QAAhB,EAA0B;AACtBH,IAAAA,OAAO,CAACI,IAAR,GAAed,WAAW,CAACa,QAA3B;AACH;;AACD,SAAOH,OAAP;AACH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.X509 = void 0;\nconst error_1 = require(\"../../error\");\nconst utils_1 = require(\"../../utils\");\nconst auth_provider_1 = require(\"./auth_provider\");\nclass X509 extends auth_provider_1.AuthProvider {\n    async prepare(handshakeDoc, authContext) {\n        const { credentials } = authContext;\n        if (!credentials) {\n            throw new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.');\n        }\n        return { ...handshakeDoc, speculativeAuthenticate: x509AuthenticateCommand(credentials) };\n    }\n    async auth(authContext) {\n        const connection = authContext.connection;\n        const credentials = authContext.credentials;\n        if (!credentials) {\n            throw new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.');\n        }\n        const response = authContext.response;\n        if (response?.speculativeAuthenticate) {\n            return;\n        }\n        await connection.commandAsync((0, utils_1.ns)('$external.$cmd'), x509AuthenticateCommand(credentials), undefined);\n    }\n}\nexports.X509 = X509;\nfunction x509AuthenticateCommand(credentials) {\n    const command = { authenticate: 1, mechanism: 'MONGODB-X509' };\n    if (credentials.username) {\n        command.user = credentials.username;\n    }\n    return command;\n}\n"]},"metadata":{},"sourceType":"script"}